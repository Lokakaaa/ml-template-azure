# Actions train a model on Azure Machine Learning
name: aml-train-deploy-workflow

on:
  push:
    branches:
      - dev-branch
    paths:
      - 'code/*'
      - '.github/workflows/*'

jobs:
  Train:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v4

    - name: Install Azure CLI and ML extension
      run: |
        az extension add -n ml -y
    
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # This step has to happen after logging in and the AzureCloud is set up, with this step, there's no need to specify ws and rg for every CLI command
    - name: Set Subscription and connect to workspace
      run: |
        az account set --subscription $(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .subscriptionId)
        az configure --defaults workspace=hydra-eu-ws group=hydra-eu-rg location=eastus2
        
    - name: Create/Check Azure ML Compute
      run: |
        az ml compute create --file code/compute.yml

    - name: Submit Azure ML Job
      id: get_run_id  # Assign id so the output can reference this step
      run: |
        run_id=$(az ml job create --file src/job.yml --query name -o tsv)
        echo "run_id=$run_id" >> $GITHUB_ENV # Persist the run_id as a GitHub Actions environment variable
    
    - name: Wait for Job Completion and Stream Logs
      run: |
        az ml job stream --name ${{ env.run_id }}  # Stream the logs in real-time

    - name: Register the model
      run: |
        az ml model create --name my-registered-model --type mlflow_model \
          --path runs:/${{ env.run_id }}/model/    

    - name: Get Latest Model Version
      run: |
        MODEL_NAME=$(az ml model list --query "[0].name" -o tsv)
        MODEL_VERSION=$(az ml model list --query "[0].version" -o tsv)
        echo "MODEL_NAME=$MODEL_NAME" >> $GITHUB_ENV
        echo "MODEL_VERSION=$MODEL_VERSION" >> $GITHUB_ENV

    - name: Deploy Model
      run: |
        cat <<EOF > deployment.yaml
        $schema: https://azuremlschemas.azureedge.net/latest/managedOnlineDeployment.schema.json
        name: my-mlops-deployment
        endpoint_name: my-mlops-endpoint
        model:
          name: $MODEL_NAME
          version: $MODEL_VERSION
          type: mlflow_model
        instance_type: Standard_DS3_v2
        instance_count: 1
        EOF

        az ml online-deployment create --name my-mlops-deployment --endpoint my-mlops-endpoint -f deployment.yaml --all-traffic
